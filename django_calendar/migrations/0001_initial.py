# Generated by Django 5.1.1 on 2024-09-12 22:59

import django.contrib.sites.managers
import django.db.models.deletion
import django_calendar.models.managers
import django_calendar.models.mixins
import multiselectfield.db.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, unique=True,
                                         verbose_name='id único')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modificado em')),
                ('summary', models.CharField(max_length=255, verbose_name='descrição')),
                ('site', models.ForeignKey(default=django_calendar.models.mixins.get_site_id, editable=False,
                                           on_delete=django.db.models.deletion.PROTECT, to='sites.site',
                                           verbose_name='site')),
            ],
            options={
                'verbose_name': 'calandário',
                'verbose_name_plural': 'calendários',
                'get_latest_by': 'created',
            },
            managers=[
                ('objects', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid',
                 models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, verbose_name='id único')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modificado em')),
                ('summary', models.CharField(max_length=255, verbose_name='descrição')),
                ('description', models.TextField(blank=True, null=True, verbose_name='detalhes')),
                ('dtstart', models.DateTimeField(verbose_name='data e hora inicial')),
                ('dtend', models.DateTimeField(verbose_name='data e hora final')),
                ('sequence', models.PositiveSmallIntegerField(default=0, verbose_name='versão')),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendar.calendar',
                                               verbose_name='calendário')),
                ('site', models.ForeignKey(default=django_calendar.models.mixins.get_site_id, editable=False,
                                           on_delete=django.db.models.deletion.PROTECT, to='sites.site',
                                           verbose_name='site')),
            ],
            options={
                'verbose_name': 'evento',
                'verbose_name_plural': 'eventos',
                'get_latest_by': 'created',
            },
            managers=[
                ('objects', django_calendar.models.managers.EventManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exdate', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exdate',
                                            to='calendar.event')),
                ('site', models.ForeignKey(default=django_calendar.models.mixins.get_site_id, editable=False,
                                           on_delete=django.db.models.deletion.PROTECT, to='sites.site',
                                           verbose_name='site')),
            ],
            options={
                'verbose_name': 'data excluída',
                'verbose_name_plural': 'datas excluídas',
                'get_latest_by': 'created',
            },
            managers=[
                ('objects', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='RecurrencyRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('freq', models.CharField(
                    choices=[('DAILY', 'Diária'), ('WEEKLY', 'Semanal'), ('MONTHLY', 'Mensal'), ('YEARLY', 'Anual')],
                    default='DAILY', max_length=7, verbose_name='frequência')),
                ('interval', models.PositiveSmallIntegerField(default=1, verbose_name='intervalo')),
                ('repeat', models.CharField(blank=True, choices=[(None, 'Para sempre'), ('UNTIL', 'Até a data'),
                                                                 ('COUNT', 'Quantidade de ocorrências')], max_length=5,
                                            null=True, verbose_name='Tipo de repetição')),
                ('until',
                 models.DateTimeField(blank=True, help_text='Utilizar apenas para Tipo de repetição "Até a data".',
                                      null=True, verbose_name='até a data')),
                ('count', models.PositiveIntegerField(blank=True,
                                                      help_text='Utilizar apenas para Tipo de repetição "Quantidade de ocorrências".',
                                                      null=True, verbose_name='quantidade de ocorrências')),
                ('byday', multiselectfield.db.fields.MultiSelectField(blank=True,
                                                                      choices=[('SU', 'Domingo'), ('MO', 'Segunda'),
                                                                               ('TU', 'Terça'), ('WE', 'Quarta'),
                                                                               ('TH', 'Quinta'), ('FR', 'Sexta'),
                                                                               ('SA', 'Sábado')],
                                                                      help_text='Utilizar para frequência "Semanal", "Mensal" ou "Anual".',
                                                                      max_length=20, null=True,
                                                                      verbose_name='dias da semana')),
                ('byweek',
                 models.CharField(blank=True, editable=False, max_length=20, null=True, verbose_name='semana')),
                ('bymonth', multiselectfield.db.fields.MultiSelectField(blank=True,
                                                                        choices=[('1', 'Janeiro'), ('2', 'Fevereiro'),
                                                                                 ('3', 'Março'), ('4', 'Abril'),
                                                                                 ('5', 'Maio'), ('6', 'Junho'),
                                                                                 ('7', 'Julho'), ('8', 'Agosto'),
                                                                                 ('9', 'Setembro'), ('10', 'Outubro'),
                                                                                 ('11', 'Novembro'),
                                                                                 ('12', 'Dezembro')],
                                                                        help_text='Utilizar para frequência "Anual".',
                                                                        max_length=26, null=True, verbose_name='mês')),
                ('bymonthday', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='dia do mês')),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rrule',
                                               to='calendar.event', verbose_name='evento')),
                ('site', models.ForeignKey(default=django_calendar.models.mixins.get_site_id, editable=False,
                                           on_delete=django.db.models.deletion.PROTECT, to='sites.site',
                                           verbose_name='site')),
            ],
            options={
                'verbose_name': 'regra de recorrência',
                'verbose_name_plural': 'regras de recorrencia',
            },
            managers=[
                ('objects', django_calendar.models.managers.RecurrencyRuleManager()),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modificado em')),
                ('summary', models.CharField(max_length=255, verbose_name='descrição')),
                ('site', models.ForeignKey(default=django_calendar.models.mixins.get_site_id, editable=False,
                                           on_delete=django.db.models.deletion.PROTECT, to='sites.site',
                                           verbose_name='site')),
            ],
            options={
                'verbose_name': 'situação',
                'verbose_name_plural': 'situações',
                'get_latest_by': 'created',
            },
            managers=[
                ('objects', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='calendar.status'),
        ),
    ]
